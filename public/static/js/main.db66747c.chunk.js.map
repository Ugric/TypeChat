{"version":3,"sources":["hooks/datahook.tsx","images/logos/TypeChat.svg","pages/Home.tsx","pages/loader.tsx","images/logos/TS.svg","pages/RouterForm.tsx","cookies.tsx","pages/Login.tsx","hooks/usescreensize.tsx","playsound.ts","pages/Navbar.tsx","reportWebVitals.ts","hooks/useapi.tsx","pages/Signup.tsx","pages/error.tsx","pages/Chat.tsx","pages/404.tsx","hooks/useLocalStorage.tsx","pages/profilePage.tsx","pages/usersettings.tsx","snooze.ts","pages/contacts.tsx","pages/addpeople.tsx","notification.tsx","index.tsx"],"names":["data","createContext","undefined","useData","useContext","Home","loggedin","to","src","TypeChat","alt","style","width","maxWidth","display","margin","textAlign","color","Loader","marginTop","justifyContent","className","RouterForm","action","beforecallback","callback","children","appendtoformdata","fd","onerror","e","console","error","onSubmit","a","preventDefault","FormData","index","target","length","element","type","file","files","append","name","value","checked","newformdata","fetch","method","body","json","result","Cookies","Login","rechecklogged","useState","seterror","history","useHistory","loading","setloading","push","logo","borderRadius","fontSize","fontFamily","icon","faSignInAlt","email","test","String","toLowerCase","resp","cookies","set","token","path","expires","Date","now","err","placeholder","background","borderTop","borderRight","borderBottom","borderLeft","borderImage","marginBottom","paddingBottom","padding","border","boxShadow","useWindowSize","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","hasshownmuted","url","hasplayed","audio","Howl","on","play","setTimeout","pause","store","addNotification","title","onRemoval","message","insert","animationIn","animationOut","container","dismiss","duration","pauseOnHover","onScreen","playSound","PageNav","Navbarref","useRef","navbarsize","useComponentSize","user","setnavbarsize","chattingto","location","useLocation","Navbar","ref","bg","variant","fixed","Brand","onPointerDown","onPointerUp","as","Link","bigLogo","smallLogo","Nav","pathname","faComment","faUserFriends","faPlus","faCog","textOverflow","overflow","whiteSpace","profilePic","onClick","remove","faSignOutAlt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useApi","setData","setLoading","request","setrequest","setError","laststamp","time","getTime","current","reload","Signup","profile","setprofile","faAddressCard","imageWidth","onCrop","dataURL","fetched","blob","labelStyle","onClose","exportMimeType","exportSize","exportQuality","exportAsSquare","autoComplete","LoadError","errordataurl","position","top","left","transform","faExclamationTriangle","random","seed","x","Math","sin","floor","numToSSColumn","num","t","s","fromCharCode","MessageMaker","messages","typingdata","scrollref","toscroll","output","setoutput","faketext","setfaketext","lastmessagegrouptime","tempmessages","i","split","map","trim","open","cursor","faFile","mine","toLocaleString","timeEnd","Number","specialchars","join","document","onscroll","documentElement","scrollHeight","scrollTop","clientHeight","typing","opacity","textShadow","ChatNotFound","faSadCry","faCommentSlash","ChatPage","bypassChars","chats","setchats","useParams","id","setchattingto","notifications","URLSearchParams","toString","oldmetypingdata","setoldmetypingdata","metypingdata","setmetypingdata","host","socketUrl","settypingdata","isonline","setisonline","metypinglengthref","metypingref","typingTimer","inputref","scrollerref","bottomref","loadingchatmessages","setloadingchatmessages","oldmessagsize","setoldmessagesize","messagesize","scrolltobottom","doneTyping","useWebSocket","shouldReconnect","reconnectInterval","onOpen","sendJsonMessage","mobile","navigator","userAgent","exists","lastJsonMessage","readyState","scrollingElement","scrollY","offsetHeight","fileref","input","limit","c","concat","username","substring","_","online","JSON","stringify","onload","ReadyState","OPEN","UNINSTANTIATED","zIndex","faDesktop","faMobileAlt","faEyeSlash","handleKeys","onKeyEvent","focus","bottom","onInput","size","formdata","removeNotification","log","marginRight","backgroundColor","click","includes","clearTimeout","onKeyDown","autoFocus","resize","maxRows","marginLeft","faPaperPlane","Chat","Error404","faFileCode","useLocalStorage","key","initialValue","readValue","item","localStorage","getItem","parse","warn","storedValue","setStoredValue","handleStorageChange","newValue","setItem","dispatchEvent","Event","ProfilePage","r","g","b","backgroundcolour","setbackgroundcolour","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","maxHeight","onLoad","colorThief","ColorThief","getColor","WebkitTextStroke","fontWeight","tag","aboutme","componentDecorator","decoratedHref","decoratedText","href","Changebutton","clickable","Modal","setAppElement","UserSettings","backgroundinputref","uploading","setuploading","setbackgroundImage","UsernameModelIsOpen","setUsernameModelIsOpen","ProfileModelIsOpen","setProfileModelIsOpen","faPen","isOpen","onRequestClose","onAfterOpen","overlay","content","right","contentLabel","float","onChange","URL","createObjectURL","accept","trimStart","defaultValue","snooze","milliseconds","Promise","resolve","Contact","holdref","UserModelIsOpen","setUserModelIsOpen","clearInterval","minHeight","Contacts","contacts","contact","UserListing","friends","faUserPlus","AddPeople","search","setsearch","q","onKeyUp","NotificationComponent","sound","App","getuserdataonupdate","setgetuserdataonupdate","userdata","setuserdata","catchedcontacts","setcachedcontacts","response","reconnect","overflowWrap","Provider","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.db66747c.chunk.js","sourcesContent":["import { createContext, useContext } from \"react\";\r\n\r\nconst data = createContext<any>(undefined);\r\nconst useData = () => useContext(data);\r\nexport { data, useData };\r\n","export default __webpack_public_path__ + \"static/media/TypeChat.b8ec676e.svg\";","import { Link, Redirect } from \"react-router-dom\";\r\nimport { useData } from \"../hooks/datahook\";\r\nimport TypeChat from \"../images/logos/TypeChat.svg\";\r\n\r\nfunction Home() {\r\n  const { loggedin } = useData();\r\n  if (!loggedin) {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <img\r\n            src={TypeChat}\r\n            alt=\"TypeChat\"\r\n            style={{\r\n              width: \"100%\",\r\n              maxWidth: \"250px\",\r\n              display: \"block\",\r\n              margin: \"1rem auto 0\",\r\n            }}\r\n          ></img>\r\n        </div>\r\n        <p style={{ textAlign: \"center\" }}>\r\n          Type to your friends. Powered by TypeScript.\r\n        </p>\r\n        <p style={{ textAlign: \"center\" }}>\r\n          <span>\r\n            <Link to=\"/login\" style={{ color: \"var(--secondary-text-colour)\" }}>\r\n              login\r\n            </Link>\r\n          </span>{\" \"}\r\n          or{\" \"}\r\n          <span>\r\n            <Link\r\n              to=\"/signup\"\r\n              style={{ color: \"var(--secondary-text-colour)\" }}\r\n            >\r\n              create an account\r\n            </Link>\r\n          </span>\r\n          !\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n  return <Redirect to=\"/contacts\"></Redirect>;\r\n}\r\n\r\nexport default Home;\r\n","import \"./css/loader.css\";\r\nimport \"./css/center.css\";\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        marginTop: \"5rem\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","export default __webpack_public_path__ + \"static/media/TS.6e2a4395.svg\";","import react from \"react\"\r\n\r\nexport function RouterForm({\r\n  action,\r\n  beforecallback,\r\n  callback,\r\n  children,\r\n  style,\r\n  appendtoformdata = (fd: FormData) => {\r\n    return fd;\r\n  },\r\n  onerror = (e: any) => {\r\n    console.error(e);\r\n  },\r\n}: {\r\n  action: string;\r\n  beforecallback: (e: any) => boolean | undefined;\r\n  callback(responce: any): void;\r\n  children: any; style?: react.CSSProperties;\r\n  appendtoformdata?(fd: FormData): FormData; onerror?(e: any): void\r\n}): JSX.Element {\r\n  return (\r\n    <form\r\n      style={style}\r\n      onSubmit={async (e: any) => {\r\n        e.preventDefault();\r\n        if (beforecallback(e)) {\r\n          const fd = new FormData();\r\n          for (let index = 0; index < e.target.length; index++) {\r\n            const element = e.target[index];\r\n            if (element.type !== \"submit\") {\r\n              if (element.type === \"file\") {\r\n                for (let file = 0; file < element.files.length; file++) {\r\n                  fd.append(element.name, element.files[file]);\r\n                }\r\n              } else if (\r\n                element.type !== \"radio\" &&\r\n                element.type !== \"checkbox\"\r\n              ) {\r\n                fd.append(element.name, element.value);\r\n              } else if (element.checked) {\r\n                fd.append(element.name, element.checked);\r\n              }\r\n            }\r\n          }\r\n          const newformdata = appendtoformdata(fd);\r\n          try {\r\n            const result = await (\r\n              await fetch(action, {\r\n                method: \"POST\",\r\n                body: newformdata,\r\n              })\r\n            ).json();\r\n            callback(result);\r\n          } catch (e) {\r\n            onerror(e);\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      {children}\r\n    </form>\r\n  );\r\n}\r\n","import Cookies from 'universal-cookie';\r\n\r\n\r\nexport default new Cookies();","import { useData } from \"../hooks/datahook\";\r\nimport { useState } from \"react\";\r\nimport Loader from \"./loader\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport logo from \"../images/logos/TS.svg\";\r\nimport { RouterForm } from \"./RouterForm\";\r\nimport cookies from \"../cookies\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction validateEmail(email: string) {\r\n  const re =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\n\r\nfunction Login() {\r\n  const { rechecklogged, loggedin } = useData();\r\n  const [error, seterror] = useState(\"\");\r\n  const history = useHistory();\r\n  const [loading, setloading] = useState(false);\r\n  if (loggedin) {\r\n    history.push(\"/\");\r\n    return <></>;\r\n  }\r\n  return (\r\n    <>\r\n      <div style={{ display: loading ? \"\" : \"none\" }}>\r\n        <Loader></Loader>\r\n      </div>\r\n      <div\r\n        style={{\r\n          margin: \"5rem 0\",\r\n          textAlign: \"center\",\r\n          display: !loading ? \"\" : \"none\",\r\n        }}\r\n      >\r\n        <img\r\n          src={logo}\r\n          style={{ width: \"150px\", borderRadius: \"10px\" }}\r\n          alt=\"logo\"\r\n        ></img>\r\n        <h1\r\n          style={{\r\n            fontSize: \"20px\",\r\n            fontFamily: \"'Source Sans Pro', sans-serif\",\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faSignInAlt}></FontAwesomeIcon> Login\r\n        </h1>\r\n        <RouterForm\r\n          action={\"/login\"}\r\n          beforecallback={(e: any) => {\r\n            if (e.target[0].value !== \"\" && e.target[1].value !== \"\") {\r\n              if (validateEmail(e.target[0].value)) {\r\n                setloading(true);\r\n                return true;\r\n              } else {\r\n                seterror(\"input a valid email!\");\r\n              }\r\n            } else {\r\n              seterror(\"input an email and password!\");\r\n            }\r\n          }}\r\n          style={{\r\n            width: \"fit-content\",\r\n            margin: \"auto\",\r\n            maxWidth: \"300px\",\r\n          }}\r\n          callback={(resp: any) => {\r\n            if (resp.resp) {\r\n              cookies.set(\"token\", resp.token, {\r\n                path: \"/\",\r\n                expires: new Date(Date.now() + 3.154e12),\r\n              });\r\n              rechecklogged();\r\n            } else {\r\n              setloading(false);\r\n              seterror(resp.err);\r\n            }\r\n          }}\r\n        >\r\n          <p\r\n            style={{\r\n              textAlign: \"end\",\r\n              margin: \"0\",\r\n            }}\r\n          >\r\n            Email\r\n          </p>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            style={{\r\n              background: \"transparent\",\r\n              borderTop: \"none\",\r\n              borderRight: \"none\",\r\n              borderBottom: \"1px solid white\",\r\n              borderLeft: \"none\",\r\n              borderImage: \"initial\",\r\n              marginBottom: \"1rem\",\r\n              width: \"100%\",\r\n              paddingBottom: \"0.5rem\",\r\n              fontFamily: \"'Source Sans Pro', sans-serif\",\r\n              fontSize: \"17px\",\r\n              color: \"white\",\r\n              borderRadius: \"0px\",\r\n            }}\r\n          />\r\n          <p\r\n            style={{\r\n              textAlign: \"end\",\r\n              margin: \"0\",\r\n            }}\r\n          >\r\n            Password\r\n          </p>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"pass\"\r\n            style={{\r\n              background: \"transparent\",\r\n              borderTop: \"none\",\r\n              borderRight: \"none\",\r\n              borderBottom: \"1px solid white\",\r\n              borderLeft: \"none\",\r\n              borderImage: \"initial\",\r\n              marginBottom: \"1rem\",\r\n              width: \"100%\",\r\n              paddingBottom: \"0.5rem\",\r\n              fontFamily: \"'Source Sans Pro', sans-serif\",\r\n              fontSize: \"17px\",\r\n              color: \"white\",\r\n              borderRadius: \"0px\",\r\n            }}\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Login\"\r\n            style={{\r\n              padding: \"1rem\",\r\n              maxWidth: \"250px\",\r\n              width: \"100%\",\r\n              border: \"none\",\r\n              borderRadius: \"50px\",\r\n              background:\r\n                \"linear-gradient(45deg, var(--dark-bg-colour) 0%, var(--light-bg-colour) 100%)\",\r\n              color: \"white\",\r\n              fontFamily: '\"Source Sans Pro\", sans-serif',\r\n              fontSize: \"20px\",\r\n              boxShadow: \"rgb(0, 0, 0) 0px 6px 5px 0px\",\r\n            }}\r\n          />\r\n          <p style={{ margin: \"1rem 0\", color: \"red\" }}>{error}</p>\r\n          <p style={{ margin: \"1rem 0\", color: \"white\" }}>\r\n            dont already have an account?{\" \"}\r\n            <span>\r\n              <Link\r\n                to=\"/signup\"\r\n                style={{ color: \"var(--secondary-text-colour)\" }}\r\n              >\r\n                Make one\r\n              </Link>\r\n            </span>\r\n          </p>\r\n        </RouterForm>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import { useState, useEffect } from \"react\";\r\nfunction useWindowSize() {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize();\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n  return windowSize;\r\n}\r\nexport default useWindowSize;\r\n","import { Howl } from \"howler\";\r\nimport { store } from \"react-notifications-component\";\r\nlet hasshownmuted = false;\r\nasync function playSound(url: string) {\r\n  let hasplayed = false;\r\n  const audio = new Howl({\r\n    src: url,\r\n  });\r\n  audio.on(\"play\", () => {\r\n    hasplayed = true;\r\n  });\r\n  audio.play();\r\n  setTimeout(() => {\r\n    if (!hasplayed) {\r\n      audio.pause();\r\n      if (!hasshownmuted) {\r\n        store.addNotification({\r\n          title: \"sound\",\r\n          type: \"danger\",\r\n          onRemoval: () => {\r\n            hasshownmuted = false;\r\n          },\r\n          message:\r\n            \"you need to interact with the site for sound effects to play!\",\r\n          insert: \"top\",\r\n          animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n          animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n          container: \"top-right\",\r\n          dismiss: { duration: 10000, pauseOnHover: true, onScreen: true },\r\n        });\r\n        hasshownmuted = true;\r\n      }\r\n    }\r\n  }, 5000);\r\n}\r\nexport default playSound;\r\n","import { useData } from \"../hooks/datahook\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport bigLogo from \"../images/logos/TypeChat.svg\";\r\nimport smallLogo from \"../images/logos/TS.svg\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./css/nav.css\";\r\nimport cookies from \"../cookies\";\r\nimport useWindowSize from \"../hooks/usescreensize\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faComment,\r\n  faUserFriends,\r\n  faPlus,\r\n  faSignOutAlt,\r\n  faCog,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport useComponentSize from \"@rehooks/component-size\";\r\nimport playSound from \"../playsound\";\r\nconst PageNav = () => {\r\n  const { width } = useWindowSize();\r\n  const Navbarref = useRef(null);\r\n  const navbarsize = useComponentSize(Navbarref);\r\n  const { loggedin, user, rechecklogged, setnavbarsize, chattingto } =\r\n    useData();\r\n  useEffect(() => {\r\n    setnavbarsize(navbarsize);\r\n  }, [navbarsize, setnavbarsize]);\r\n  const location = useLocation();\r\n  return (\r\n    <>\r\n      <Navbar ref={Navbarref} bg=\"darkpurple\" variant=\"dark\" fixed=\"top\">\r\n        <Navbar.Brand\r\n          onPointerDown={() => {\r\n            playSound(\"/sounds/click2.mp3\");\r\n          }}\r\n          onPointerUp={() => {\r\n            playSound(\"/sounds/click1.mp3\");\r\n          }}\r\n          as={Link}\r\n          to={loggedin ? \"/contacts\" : \"/\"}\r\n        >\r\n          <img\r\n            alt=\"TypeChat\"\r\n            src={width > 700 ? bigLogo : smallLogo}\r\n            style={{\r\n              height: \"40px\",\r\n            }}\r\n          />{\" \"}\r\n        </Navbar.Brand>\r\n\r\n        <Nav className=\"mc-auto\">\r\n          {loggedin ? (\r\n            <>\r\n              {chattingto ? (\r\n                <Nav.Link\r\n                  onPointerDown={() => {\r\n                    playSound(\"/sounds/click2.mp3\");\r\n                  }}\r\n                  onPointerUp={() => {\r\n                    playSound(\"/sounds/click1.mp3\");\r\n                  }}\r\n                  as={Link}\r\n                  to={`/chat/${chattingto}`}\r\n                  style={{\r\n                    color:\r\n                      location.pathname === `/chat/${chattingto}`\r\n                        ? \"white\"\r\n                        : \"\",\r\n                  }}\r\n                >\r\n                  <FontAwesomeIcon icon={faComment} />\r\n                </Nav.Link>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <Nav.Link\r\n                onPointerDown={() => {\r\n                  playSound(\"/sounds/click2.mp3\");\r\n                }}\r\n                onPointerUp={() => {\r\n                  playSound(\"/sounds/click1.mp3\");\r\n                }}\r\n                as={Link}\r\n                to=\"/contacts\"\r\n                style={{\r\n                  color: location.pathname === \"/contacts\" ? \"white\" : \"\",\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faUserFriends} />\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                onPointerDown={() => {\r\n                  playSound(\"/sounds/click2.mp3\");\r\n                }}\r\n                onPointerUp={() => {\r\n                  playSound(\"/sounds/click1.mp3\");\r\n                }}\r\n                as={Link}\r\n                to=\"/add\"\r\n                style={{ color: location.pathname === \"/add\" ? \"white\" : \"\" }}\r\n              >\r\n                <FontAwesomeIcon icon={faPlus} />\r\n              </Nav.Link>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Nav>\r\n        <Nav>\r\n          <Nav.Link\r\n            onPointerDown={() => {\r\n              playSound(\"/sounds/click2.mp3\");\r\n            }}\r\n            onPointerUp={() => {\r\n              playSound(\"/sounds/click1.mp3\");\r\n            }}\r\n            as={Link}\r\n            to=\"/settings\"\r\n            style={{ color: location.pathname === \"/settings\" ? \"white\" : \"\" }}\r\n          >\r\n            <FontAwesomeIcon icon={faCog} />\r\n          </Nav.Link>\r\n          {loggedin ? (\r\n            <>\r\n              <Nav.Link\r\n                onPointerDown={() => {\r\n                  playSound(\"/sounds/click2.mp3\");\r\n                }}\r\n                onPointerUp={() => {\r\n                  playSound(\"/sounds/click1.mp3\");\r\n                }}\r\n                as={Link}\r\n                to=\"/user/settings\"\r\n                style={{\r\n                  color: location.pathname === \"/user/settings\" ? \"white\" : \"\",\r\n                  textOverflow: \"ellipsis\",\r\n                  maxWidth: \"30vw\",\r\n                  overflow: \"hidden\",\r\n                  whiteSpace: \"nowrap\",\r\n                  padding: \"0\",\r\n                }}\r\n              >\r\n                <img\r\n                  alt=\"Profile\"\r\n                  src={\"/files/\" + user.profilePic}\r\n                  style={{ height: \"40px\", borderRadius: \"50%\" }}\r\n                />\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                onPointerDown={() => {\r\n                  playSound(\"/sounds/click2.mp3\");\r\n                }}\r\n                onPointerUp={() => {\r\n                  playSound(\"/sounds/click1.mp3\");\r\n                }}\r\n                onClick={async () => {\r\n                  await fetch(\"/api/logout\");\r\n                  cookies.remove(\"token\");\r\n                  rechecklogged();\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faSignOutAlt} />\r\n              </Nav.Link>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Nav.Link\r\n                onPointerDown={() => {\r\n                  playSound(\"/sounds/click2.mp3\");\r\n                }}\r\n                onPointerUp={() => {\r\n                  playSound(\"/sounds/click1.mp3\");\r\n                }}\r\n                as={Link}\r\n                to=\"/login\"\r\n                style={{ color: location.pathname === \"/login\" ? \"white\" : \"\" }}\r\n              >\r\n                Login\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                onPointerDown={() => {\r\n                  playSound(\"/sounds/click2.mp3\");\r\n                }}\r\n                onPointerUp={() => {\r\n                  playSound(\"/sounds/click1.mp3\");\r\n                }}\r\n                as={Link}\r\n                to=\"/signup\"\r\n                style={{\r\n                  color: location.pathname === \"/signup\" ? \"white\" : \"\",\r\n                }}\r\n              >\r\n                Sign Up\r\n              </Nav.Link>\r\n            </>\r\n          )}\r\n        </Nav>\r\n      </Navbar>\r\n      <div style={{ height: navbarsize.height }}></div>\r\n    </>\r\n  );\r\n};\r\nexport default PageNav;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { useState, useEffect, useRef } from \"react\";\r\n\r\ninterface userApiInterface {\r\n  loading: boolean;\r\n  data: any;\r\n  setData: Function;\r\n  error: boolean | unknown;\r\n  reload: Function;\r\n}\r\n\r\nconst useApi = (url: string | null): userApiInterface => {\r\n  const [data, setData] = useState<JSON | unknown>(undefined);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [request, setrequest] = useState<number>(0);\r\n  const [error, setError] = useState<boolean | unknown>(undefined);\r\n  const laststamp = useRef<number | null>(null);\r\n  function reload() {\r\n    setrequest(request + 1);\r\n    setLoading(true);\r\n    setError(undefined);\r\n    setData(undefined);\r\n  }\r\n  useEffect(() => {\r\n    if (url) {\r\n      (async () => {\r\n        try {\r\n          const time = new Date().getTime();\r\n          const result = await (await fetch(url)).json();\r\n          if (!laststamp.current || time - laststamp.current > 0) {\r\n            laststamp.current = time;\r\n            setData(result);\r\n          }\r\n        } catch (e) {\r\n          setError(e);\r\n        }\r\n        setLoading(false);\r\n      })();\r\n    }\r\n  }, [url, request]);\r\n\r\n  return { loading, data, setData, error, reload };\r\n};\r\n\r\nexport default useApi;\r\n","import { useData } from \"../hooks/datahook\";\r\nimport { useState } from \"react\";\r\nimport Loader from \"./loader\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport logo from \"../images/logos/TS.svg\";\r\nimport { RouterForm } from \"./RouterForm\";\r\nimport cookies from \"../cookies\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAddressCard } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Avatar from \"react-avatar-edit\";\r\n\r\nfunction validateEmail(email: string) {\r\n  const re =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\n\r\nfunction Signup() {\r\n  const { rechecklogged, loggedin } = useData();\r\n  const [error, seterror] = useState(\"\");\r\n  const [profile, setprofile] = useState<Blob | null>(null);\r\n  const history = useHistory();\r\n  const [loading, setloading] = useState(false);\r\n  if (loggedin) {\r\n    history.push(\"/\");\r\n    return <></>;\r\n  }\r\n  return (\r\n    <>\r\n      <div style={{ display: loading ? \"\" : \"none\" }}>\r\n        <Loader></Loader>\r\n      </div>\r\n      <div\r\n        style={{\r\n          margin: \"5rem 0\",\r\n          textAlign: \"center\",\r\n          display: !loading ? \"\" : \"none\",\r\n        }}\r\n      >\r\n        <img src={logo} alt=\"logo\" style={{ width: \"150px\", borderRadius: \"10px\" }}></img>\r\n        <h1\r\n          style={{\r\n            fontSize: \"20px\",\r\n            fontFamily: \"'Source Sans Pro', sans-serif\",\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faAddressCard}></FontAwesomeIcon> Sign Up\r\n        </h1>\r\n        <div>\r\n          <RouterForm\r\n            action={\"/signup\"}\r\n            beforecallback={(e: any) => {\r\n              if (\r\n                e.target[0].value !== \"\" &&\r\n                e.target[1].value !== \"\" &&\r\n                e.target[2].value !== \"\" &&\r\n                profile\r\n              ) {\r\n                if (validateEmail(e.target[0].value)) {\r\n                  setloading(true);\r\n                  return true;\r\n                } else {\r\n                  seterror(\"input a valid email!\");\r\n                }\r\n              } else {\r\n                seterror(\"input a profile, username, email and password!\");\r\n              }\r\n            }}\r\n            appendtoformdata={(fd: FormData) => {\r\n              fd.append(\"profile\", profile ? profile : \"\");\r\n              return fd;\r\n            }}\r\n            style={{ width: \"fit-content\", margin: \"auto\", maxWidth: \"300px\" }}\r\n            callback={(resp: any) => {\r\n              if (resp.resp) {\r\n                cookies.set(\"token\", resp.token, {\r\n                  path: \"/\",\r\n                  expires: new Date(Date.now() + 3.154e12),\r\n                });\r\n                rechecklogged();\r\n              } else {\r\n                setloading(false);\r\n                seterror(resp.err);\r\n              }\r\n            }}\r\n          >\r\n            {\" \"}\r\n            <p\r\n              style={{\r\n                textAlign: \"end\",\r\n                margin: \"0\",\r\n              }}\r\n            >\r\n              profile\r\n            </p>\r\n            <Avatar\r\n              width={300}\r\n              height={0}\r\n              imageWidth={300}\r\n              onCrop={(dataURL) => {\r\n                fetch(dataURL).then((fetched) =>\r\n                  fetched.blob().then((blob) => setprofile(blob))\r\n                );\r\n              }}\r\n              labelStyle={{color: \"white\"}}\r\n              onClose={() => {\r\n                setprofile(null);\r\n              }}\r\n              exportMimeType=\"image/jpeg\"\r\n              exportSize={500}\r\n              exportQuality={0.75}\r\n              exportAsSquare\r\n            />{\" \"}\r\n            <p\r\n              style={{\r\n                textAlign: \"end\",\r\n                margin: \"0\",\r\n              }}\r\n            >\r\n              Email\r\n            </p>{\" \"}\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              name=\"email\"\r\n              style={{\r\n                background: \"transparent\",\r\n                borderTop: \"none\",\r\n                borderRight: \"none\",\r\n                borderBottom: \"1px solid white\",\r\n                borderLeft: \"none\",\r\n                borderImage: \"initial\",\r\n                marginBottom: \"1rem\",\r\n                width: \"100%\",\r\n                paddingBottom: \"0.5rem\",\r\n                fontFamily: \"'Source Sans Pro', sans-serif\",\r\n                fontSize: \"17px\",\r\n                color: \"white\",\r\n                borderRadius: \"0px\",\r\n              }}\r\n              autoComplete=\"new-password\"\r\n            />\r\n            <p\r\n              style={{\r\n                textAlign: \"end\",\r\n                margin: \"0\",\r\n              }}\r\n            >\r\n              Username\r\n            </p>{\" \"}\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              name=\"uname\"\r\n              style={{\r\n                background: \"transparent\",\r\n                borderTop: \"none\",\r\n                borderRight: \"none\",\r\n                borderBottom: \"1px solid white\",\r\n                borderLeft: \"none\",\r\n                borderImage: \"initial\",\r\n                marginBottom: \"1rem\",\r\n                width: \"100%\",\r\n                paddingBottom: \"0.5rem\",\r\n                fontFamily: \"'Source Sans Pro', sans-serif\",\r\n                fontSize: \"17px\",\r\n                color: \"white\",\r\n                borderRadius: \"0px\",\r\n              }}\r\n              autoComplete=\"new-password\"\r\n            />{\" \"}\r\n            <p\r\n              style={{\r\n                textAlign: \"end\",\r\n                margin: \"0\",\r\n              }}\r\n            >\r\n              Password\r\n            </p>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"pass\"\r\n              style={{\r\n                background: \"transparent\",\r\n                borderTop: \"none\",\r\n                borderRight: \"none\",\r\n                borderBottom: \"1px solid white\",\r\n                borderLeft: \"none\",\r\n                borderImage: \"initial\",\r\n                marginBottom: \"1rem\",\r\n                width: \"100%\",\r\n                paddingBottom: \"0.5rem\",\r\n                fontFamily: \"'Source Sans Pro', sans-serif\",\r\n                fontSize: \"17px\",\r\n                color: \"white\",\r\n                borderRadius: \"0px\",\r\n              }}\r\n              autoComplete=\"new-password\"\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Sign up\"\r\n              style={{\r\n                padding: \"1rem\",\r\n                width: \"100%\",\r\n                border: \"none\",\r\n                borderRadius: \"50px\",\r\n                background:\r\n                  \"linear-gradient(45deg, var(--dark-bg-colour) 0%, var(--light-bg-colour) 100%)\",\r\n                color: \"white\",\r\n                fontFamily: '\"Source Sans Pro\", sans-serif',\r\n                fontSize: \"20px\",\r\n                boxShadow: \"rgb(0, 0, 0) 0px 6px 5px 0px\",\r\n              }}\r\n            />\r\n            <p style={{ margin: \"1rem 0\", color: \"red\" }}>{error}</p>\r\n            <p style={{ margin: \"1rem 0\", color: \"white\" }}>\r\n              already have an account?{\" \"}\r\n              <span>\r\n                <Link\r\n                  to=\"/login\"\r\n                  style={{ color: \"var(--secondary-text-colour)\" }}\r\n                >\r\n                  Login\r\n                </Link>\r\n              </span>\r\n            </p>\r\n          </RouterForm>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import { faExclamationTriangle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport playSound from \"../playsound\";\r\nimport errordataurl from \"../errordataurl.json\";\r\n\r\nfunction LoadError({ error }: { error: String }) {\r\n  useEffect(() => {\r\n    playSound(errordataurl);\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        textAlign: \"center\",\r\n        color: \"red\",\r\n      }}\r\n    >\r\n      <div style={{ fontSize: \"50px\" }}>\r\n        <FontAwesomeIcon icon={faExclamationTriangle} />\r\n      </div>\r\n      <h1>ERROR</h1>\r\n      <p>{error}</p>\r\n      <p>\r\n        go to the{\" \"}\r\n        <span>\r\n          <Link to=\"/\" style={{ color: \"var(--secondary-text-colour)\" }}>\r\n            Home Page\r\n          </Link>\r\n          !\r\n        </span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadError;\r\n","import {\r\n  faCommentSlash,\r\n  faDesktop,\r\n  faEyeSlash,\r\n  faFile,\r\n  faMobileAlt,\r\n  faPaperPlane,\r\n  faPlus,\r\n  faSadCry,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Link, Redirect, useHistory, useParams } from \"react-router-dom\";\r\nimport \"./css/message.css\";\r\nimport { useData } from \"../hooks/datahook\";\r\nimport useApi from \"../hooks/useapi\";\r\nimport LoadError from \"./error\";\r\nimport Loader from \"./loader\";\r\nimport useWebSocket, { ReadyState } from \"react-use-websocket\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport playSound from \"../playsound\";\r\n\r\nconst truncate = (input: string, limit: number) =>\r\n  input.length > limit ? `${input.substring(0, limit)}...` : input;\r\n\r\nfunction random(seed: number) {\r\n  var x = Math.sin(seed) * 10000;\r\n  return x - Math.floor(x);\r\n}\r\nfunction numToSSColumn(num: number) {\r\n  let s = \"\",\r\n    t;\r\n\r\n  while (num > 0) {\r\n    t = (num - 1) % 26;\r\n    s = String.fromCharCode(66 + t) + s;\r\n    num = ((num - t) / 26) | 0;\r\n  }\r\n  return s || undefined;\r\n}\r\n\r\ninterface messageTypes {\r\n  time: number;\r\n  mine: boolean;\r\n}\r\n\r\ninterface messageWithText extends messageTypes {\r\n  message: string;\r\n  file: undefined;\r\n}\r\ninterface messageWithFile extends messageTypes {\r\n  file: string;\r\n  message: undefined;\r\n}\r\n\r\nfunction MessageMaker({\r\n  messages,\r\n  typingdata,\r\n  scrollref,\r\n  toscroll,\r\n}: {\r\n  messages: Array<messageWithText | messageWithFile>;\r\n  typingdata: {\r\n    typing: Boolean;\r\n    length: Number;\r\n    specialchars: { [key: number]: any };\r\n  };\r\n  scrollref: React.RefObject<any>;\r\n  toscroll: any;\r\n}) {\r\n  const [output, setoutput] = useState(<></>);\r\n  const [faketext, setfaketext] = useState(\"\");\r\n  useEffect(() => {\r\n    console.time(\"chatrender\");\r\n    const output = [];\r\n    let tempmessages: Array<any> = [];\r\n    let lastmessagegrouptime;\r\n    for (let i = 0; i < messages.length; i++) {\r\n      const message = messages[i].message;\r\n      const file = messages[i].file;\r\n      tempmessages.push(\r\n        <div className=\"message\" key={i}>\r\n          {message ? (\r\n            message\r\n              .split(\"```\")\r\n              .map((value, index) =>\r\n                index % 2 === 0 ? (\r\n                  <div key={index}>{value.trim()}</div>\r\n                ) : (\r\n                  <SyntaxHighlighter>{value.trim()}</SyntaxHighlighter>\r\n                )\r\n              )\r\n          ) : (\r\n            <div>\r\n              <div\r\n                onClick={() => {\r\n                  window.open(`/files/${file}`, file, \"width=600,height=400\");\r\n                }}\r\n                style={{\r\n                  color: \"var(--secondary-text-colour)\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faFile}></FontAwesomeIcon> File\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n      if (!messages[i + 1] || messages[i + 1].mine !== messages[i].mine) {\r\n        output.push(\r\n          <div className=\"messagegroup\" key={i}>\r\n            {lastmessagegrouptime &&\r\n            messages[i].time - lastmessagegrouptime > 300000 ? (\r\n              <p\r\n                style={{\r\n                  margin: \"0\",\r\n                  color: `lightgray`,\r\n                  fontSize: \"10px\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                {new Date(lastmessagegrouptime).toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <div\r\n              className={`${messages[i].mine ? \"mine\" : \"yours\"} messages`}\r\n              key={i}\r\n            >\r\n              {tempmessages}\r\n            </div>\r\n            {!messages[i + 1] ? (\r\n              <p\r\n                style={{\r\n                  margin: \"0\",\r\n                  color: `lightgray`,\r\n                  fontSize: \"10px\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                {new Date(messages[i].time).toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n        );\r\n        lastmessagegrouptime = messages[i].time;\r\n        tempmessages = [];\r\n      }\r\n    }\r\n    setoutput(<>{output}</>);\r\n    console.timeEnd(\"chatrender\");\r\n  }, [messages]);\r\n  useEffect(() => {\r\n    let output = [];\r\n    for (let i = 0; i <= Number(typingdata.length); i++) {\r\n      output.push(\r\n        typingdata.specialchars && i - 1 in typingdata.specialchars\r\n          ? typingdata.specialchars[i - 1]\r\n          : numToSSColumn(random(i) * 26)\r\n      );\r\n    }\r\n    setfaketext(output.join(\"\").toLowerCase());\r\n  }, [typingdata]);\r\n  useEffect(() => {\r\n    document.body.onscroll = (e: any) => {\r\n      toscroll.current =\r\n        document.documentElement.scrollHeight -\r\n          document.documentElement.scrollTop -\r\n          document.documentElement.clientHeight <=\r\n        200;\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: `100%`,\r\n        overflow: \"overlay\",\r\n      }}\r\n      ref={scrollref}\r\n    >\r\n      <div\r\n        className=\"chat\"\r\n        style={{ margin: \"90px auto 3rem auto\", maxWidth: \"900px\" }}\r\n      >\r\n        {messages.length > 0 ? (\r\n          output\r\n        ) : (\r\n          <p style={{ color: \"gray\", textAlign: \"center\" }}>\r\n            this chat is empty... say hi!\r\n          </p>\r\n        )}\r\n        {typingdata.typing ? (\r\n          <div className={`yours messages`}>\r\n            <div\r\n              className=\"message\"\r\n              style={{\r\n                opacity: 0.5,\r\n                textShadow: \"0 0 7px black\",\r\n                color: \"transparent\",\r\n              }}\r\n            >\r\n              {faketext}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ChatNotFound() {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        textAlign: \"center\",\r\n        color: \"gray\",\r\n      }}\r\n    >\r\n      <div style={{ fontSize: \"50px\" }}>\r\n        <FontAwesomeIcon icon={faSadCry} />\r\n        <FontAwesomeIcon icon={faCommentSlash} />\r\n      </div>\r\n      <h1>No Chat Found!</h1>\r\n      <p>\r\n        go to{\" \"}\r\n        <span>\r\n          <Link\r\n            to=\"/contacts\"\r\n            style={{ color: \"var(--secondary-text-colour)\" }}\r\n          >\r\n            contacts\r\n          </Link>\r\n          !\r\n        </span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ChatPage() {\r\n  const bypassChars: string[] = [\r\n    \" \",\r\n    \"?\",\r\n    \"!\",\r\n    \"#\",\r\n    \"$\",\r\n    \"£\",\r\n    \"*\",\r\n    '\"',\r\n    \"'\",\r\n    \"(\",\r\n    \")\",\r\n    \":\",\r\n    \";\",\r\n    \"[\",\r\n    \"]\",\r\n    \"{\",\r\n    \"}\",\r\n    \"1\",\r\n    \"2\",\r\n    \"3\",\r\n    \"4\",\r\n    \"5\",\r\n    \"6\",\r\n    \"7\",\r\n    \"8\",\r\n    \"9\",\r\n    \"0\",\r\n  ];\r\n  const [chats, setchats] = useState<Array<messageWithText | messageWithFile>>(\r\n    []\r\n  );\r\n  const history = useHistory();\r\n  const { id: chattingto } = useParams<{ id: string }>();\r\n  const { setchattingto, notifications } = useData();\r\n  const { error, loading, data } = useApi(\r\n    \"/api/friendsuserdatafromid?\" +\r\n      new URLSearchParams({ id: chattingto }).toString()\r\n  );\r\n  const [oldmetypingdata, setoldmetypingdata] = useState({\r\n    type: \"typing\",\r\n    typing: false,\r\n    length: 0,\r\n    specialchars: {},\r\n  });\r\n  const [metypingdata, setmetypingdata] = useState({\r\n    type: \"typing\",\r\n    typing: false,\r\n    length: 0,\r\n    specialchars: {},\r\n  });\r\n  const [socketUrl] = useState(\r\n    `ws://${\r\n      !process.env.NODE_ENV || process.env.NODE_ENV === \"development\"\r\n        ? window.location.hostname + \":5050\"\r\n        : window.location.host\r\n    }/chat`\r\n  );\r\n  const [typingdata, settypingdata] = useState<{\r\n    typing: Boolean;\r\n    length: Number;\r\n    specialchars: { [key: number]: any };\r\n  }>({ typing: false, length: 0, specialchars: {} });\r\n  const [isonline, setisonline] = useState(\"0\");\r\n  const metypinglengthref = useRef<number>(0);\r\n  const metypingref = useRef<any>(false);\r\n  const typingTimer = useRef<any>(null);\r\n  const inputref = useRef<any>(null);\r\n  const scrollerref = useRef<any>(null);\r\n  const bottomref = useRef<any>(null);\r\n  const toscroll = useRef(true);\r\n  const [loadingchatmessages, setloadingchatmessages] = useState(true);\r\n  useEffect(() => {\r\n    setchattingto(chattingto);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const [oldmessagsize, setoldmessagesize] = useState(chats.length > 0);\r\n  const messagesize = chats.length > 0;\r\n  useEffect(() => {\r\n    if (messagesize !== oldmessagsize) {\r\n      scrolltobottom();\r\n      setoldmessagesize(messagesize);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [messagesize]);\r\n  const doneTypingInterval = 5000;\r\n  function doneTyping() {\r\n    if (metypingref.current) {\r\n      metypingref.current = false;\r\n      setmetypingdata({\r\n        type: \"typing\",\r\n        typing: false,\r\n        length: 0,\r\n        specialchars: {},\r\n      });\r\n    }\r\n  }\r\n  const { sendJsonMessage, lastJsonMessage, readyState } = useWebSocket(\r\n    socketUrl,\r\n    {\r\n      shouldReconnect: () => true,\r\n      reconnectInterval: 1,\r\n      onOpen() {\r\n        sendJsonMessage({\r\n          type: \"start\",\r\n          to: chattingto,\r\n          mobile:\r\n            /Android|webOS|iPhone|iPad|Mac|Macintosh|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n              navigator.userAgent\r\n            ),\r\n        });\r\n      },\r\n    },\r\n    data ? data.exists : false\r\n  );\r\n  const scrolltobottom = () => {\r\n    const scrollingElement = document.scrollingElement || document.body;\r\n    if (window.innerHeight + window.scrollY < document.body.offsetHeight) {\r\n      scrollingElement.scrollTop = scrollingElement.scrollHeight;\r\n    }\r\n  };\r\n  const fileref = useRef<any>(null);\r\n\r\n  useEffect(() => {\r\n    if (lastJsonMessage) {\r\n      if (lastJsonMessage.type === \"message\") {\r\n        if (!lastJsonMessage.message.mine) {\r\n          playSound(\"/sounds/newmessage.mp3\");\r\n        }\r\n        setchats((c) => c.concat(lastJsonMessage.message));\r\n\r\n        settypingdata({\r\n          typing: false,\r\n          length: 0,\r\n          specialchars: {},\r\n        });\r\n        if (toscroll.current) {\r\n          setTimeout(scrolltobottom, 0);\r\n        } else {\r\n          notifications.addNotification({\r\n            title: `${data.username}`,\r\n            message: truncate(lastJsonMessage.message.message, 25),\r\n            type: \"default\",\r\n            onRemoval: (_: number, type: string) => {\r\n              if (type === \"click\") {\r\n                history.push(`/chat/${chattingto}`);\r\n                scrolltobottom();\r\n              }\r\n            },\r\n            insert: \"top\",\r\n            container: \"top-right\",\r\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n            dismiss: {\r\n              pauseOnHover: true,\r\n              duration: 5000,\r\n              onScreen: true,\r\n            },\r\n          });\r\n        }\r\n      } else if (lastJsonMessage.type === \"ping\") {\r\n        sendJsonMessage({ type: \"pong\" });\r\n      } else if (lastJsonMessage.type === \"online\") {\r\n        setisonline(\r\n          lastJsonMessage.online ? (lastJsonMessage.mobile ? \"M\" : \"1\") : \"0\"\r\n        );\r\n      } else if (lastJsonMessage.type === \"typing\") {\r\n        if (lastJsonMessage.length > typingdata.length) {\r\n          playSound(`/sounds/click${Math.floor(Math.random() * 3 + 1)}.mp3`);\r\n        } else if (lastJsonMessage.length < typingdata.length) {\r\n          playSound(`/sounds/click3.mp3`);\r\n        }\r\n        if (toscroll.current) {\r\n          setTimeout(scrolltobottom, 0);\r\n        }\r\n        settypingdata({\r\n          typing: lastJsonMessage.typing,\r\n          length: lastJsonMessage.length,\r\n          specialchars: lastJsonMessage.specialchars,\r\n        });\r\n      } else if (lastJsonMessage.type === \"setmessages\") {\r\n        setchats(lastJsonMessage.messages);\r\n        setloadingchatmessages(false);\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [lastJsonMessage]);\r\n  useEffect(() => {\r\n    if (JSON.stringify(oldmetypingdata) !== JSON.stringify(metypingdata)) {\r\n      sendJsonMessage(metypingdata);\r\n      setoldmetypingdata(metypingdata);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [metypingdata]);\r\n  window.onload = () => setTimeout(scrolltobottom, 0);\r\n  useEffect(() => {\r\n    setTimeout(scrolltobottom, 0);\r\n  }, [loading, data, readyState]);\r\n  useEffect(() => {\r\n    if (toscroll.current) {\r\n      setTimeout(scrolltobottom, 0);\r\n    }\r\n  }, [chats]);\r\n  useEffect(() => {\r\n    if (data && !data.exists) {\r\n      setloadingchatmessages(false);\r\n    }\r\n  }, [data]);\r\n  if (\r\n    error ||\r\n    loading ||\r\n    (readyState !== ReadyState.OPEN &&\r\n      readyState !== ReadyState.UNINSTANTIATED) ||\r\n    loadingchatmessages\r\n  ) {\r\n    return error ? <LoadError error={String(error)} /> : <Loader />;\r\n  } else if (!data.exists) {\r\n    return <ChatNotFound></ChatNotFound>;\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            width: \"100%\",\r\n            height: \"90px\",\r\n            padding: \"10px\",\r\n            zIndex: 10,\r\n            background: \"linear-gradient(0deg, transparent, var(--dark-mode))\",\r\n          }}\r\n        >\r\n          <img\r\n            src={\"/files/\" + String(data.profilePic)}\r\n            style={{\r\n              display: \"block\",\r\n              height: \"65%\",\r\n              margin: \"auto\",\r\n              borderRadius: \"100%\",\r\n            }}\r\n            alt={data.username}\r\n          />\r\n          <p style={{ textAlign: \"center\" }}>\r\n            {data.username}{\" \"}\r\n            <FontAwesomeIcon\r\n              style={{ color: isonline === \"0\" ? \"#5c5c5c\" : \"lightgreen\" }}\r\n              icon={\r\n                isonline === \"1\"\r\n                  ? faDesktop\r\n                  : isonline === \"M\"\r\n                  ? faMobileAlt\r\n                  : faEyeSlash\r\n              }\r\n            ></FontAwesomeIcon>\r\n          </p>\r\n        </div>\r\n        <KeyboardEventHandler\r\n          handleKeys={[\"alphanumeric\", \"space\", \"shift\", \"cap\"]}\r\n          onKeyEvent={() => {\r\n            inputref.current.focus();\r\n          }}\r\n        />\r\n        <MessageMaker\r\n          scrollref={scrollerref}\r\n          messages={chats}\r\n          typingdata={typingdata}\r\n          toscroll={toscroll}\r\n        />\r\n        <div ref={bottomref}></div>\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            padding: \"1rem\",\r\n            width: \"100%\",\r\n            bottom: \"0px\",\r\n            background:\r\n              \"linear-gradient(180deg, transparent, var(--dark-mode))\",\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              margin: \"auto\",\r\n              width: \"100%\",\r\n              maxWidth: \"800px\",\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            <input\r\n              type=\"file\"\r\n              style={{ display: \"none\" }}\r\n              ref={fileref}\r\n              onInput={async (e: any) => {\r\n                if (e.target.files) {\r\n                  const file = e.target.files[0];\r\n                  if (file.size <= 10000000) {\r\n                    const id = Math.random();\r\n                    notifications.addNotification({\r\n                      title: \"File\",\r\n                      message: \"Uploading...\",\r\n                      type: \"warning\",\r\n                      insert: \"top\",\r\n                      id,\r\n                      container: \"top-right\",\r\n                      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n                      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n                    });\r\n                    try {\r\n                      const formdata = new FormData();\r\n                      formdata.append(\"file\", file);\r\n                      const resp = await (\r\n                        await fetch(\"/api/uploadfile\", {\r\n                          method: \"POST\",\r\n                          body: formdata,\r\n                        })\r\n                      ).json();\r\n                      if (resp.resp) {\r\n                        notifications.removeNotification(id);\r\n                        const time = new Date().getTime();\r\n                        sendJsonMessage({\r\n                          type: \"file\",\r\n                          file: resp.id,\r\n                        });\r\n                        setchats(\r\n                          chats.concat({\r\n                            mine: true,\r\n                            message: undefined,\r\n                            file: resp.id,\r\n                            time,\r\n                          })\r\n                        );\r\n                        notifications.removeNotification(id);\r\n                      } else {\r\n                        notifications.removeNotification(id);\r\n                        notifications.addNotification({\r\n                          title: \"Upload Error\",\r\n                          message: resp.err,\r\n                          type: \"danger\",\r\n                          insert: \"top\",\r\n                          container: \"top-right\",\r\n                          animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n                          animationOut: [\r\n                            \"animate__animated\",\r\n                            \"animate__fadeOut\",\r\n                          ],\r\n                        });\r\n                      }\r\n                    } catch (e) {\r\n                      notifications.removeNotification(id);\r\n                      notifications.addNotification({\r\n                        title: \"Upload Error\",\r\n                        message: String(e),\r\n                        type: \"danger\",\r\n                        insert: \"top\",\r\n                        container: \"top-right\",\r\n                        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n                        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n                      });\r\n                    }\r\n                  } else {\r\n                    console.log(\"hello\");\r\n                    notifications.addNotification({\r\n                      title: \"File too big!\",\r\n                      message: \"file needs to be less the 10MB!\",\r\n                      type: \"danger\",\r\n                      insert: \"top\",\r\n                      container: \"top-right\",\r\n                      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n                      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n                    });\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n            ​\r\n            <button\r\n              style={{\r\n                width: \"37px\",\r\n                marginRight: \"5px\",\r\n                backgroundColor: \"var(--dark-bg-colour)\",\r\n                padding: \"5px\",\r\n                borderRadius: \"20px\",\r\n                border: \"solid 1px var(--light-bg-colour)\",\r\n                color: \"white\",\r\n                textAlign: \"center\",\r\n              }}\r\n              onClick={() => {\r\n                fileref.current.click();\r\n              }}\r\n            >\r\n              <FontAwesomeIcon icon={faPlus} />\r\n            </button>\r\n            <form\r\n              onSubmit={(e: any) => {\r\n                e.preventDefault();\r\n                const message = e.target[0].value.trim();\r\n                if (message !== \"\") {\r\n                  e.target[0].value = \"\";\r\n                  const time = new Date().getTime();\r\n                  playSound(\"/sounds/send.mp3\");\r\n                  sendJsonMessage({\r\n                    type: \"message\",\r\n                    message,\r\n                  });\r\n                  setchats(\r\n                    chats.concat({ mine: true, file: undefined, message, time })\r\n                  );\r\n                  setTimeout(scrolltobottom, 0);\r\n                  metypingref.current = false;\r\n                  setmetypingdata({\r\n                    type: \"typing\",\r\n                    typing: metypingref.current,\r\n                    length: 0,\r\n                    specialchars: {},\r\n                  });\r\n                }\r\n              }}\r\n              style={{\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n              }}\r\n            >\r\n              <TextareaAutosize\r\n                ref={inputref}\r\n                onInput={(e: any) => {\r\n                  const message = e.target.value.trim();\r\n                  if (message.length <= 2000) {\r\n                    playSound(\r\n                      `/sounds/click${Math.floor(Math.random() * 3 + 1)}.mp3`\r\n                    );\r\n                    metypinglengthref.current = message.length;\r\n                    if (metypinglengthref.current > 0) {\r\n                      metypingref.current = true;\r\n                      const specialchars: { [key: string]: any } = {};\r\n                      for (let i = 0; i < message.length; i++) {\r\n                        if (bypassChars.includes(message[i])) {\r\n                          specialchars[i.toString()] = message[i];\r\n                        }\r\n                      }\r\n                      setmetypingdata({\r\n                        type: \"typing\",\r\n                        typing: metypingref.current,\r\n                        length: metypinglengthref.current,\r\n                        specialchars,\r\n                      });\r\n                      clearTimeout(typingTimer.current);\r\n                      typingTimer.current = setTimeout(\r\n                        doneTyping,\r\n                        doneTypingInterval\r\n                      );\r\n                    } else {\r\n                      metypingref.current = false;\r\n                      setmetypingdata({\r\n                        type: \"typing\",\r\n                        typing: false,\r\n                        length: 0,\r\n                        specialchars: {},\r\n                      });\r\n                    }\r\n                  } else {\r\n                    e.target.value = e.target.value.substring(0, 2000);\r\n                  }\r\n                }}\r\n                onKeyDown={() => {\r\n                  clearTimeout(typingTimer.current);\r\n                }}\r\n                autoFocus\r\n                style={{\r\n                  backgroundColor: \"var(--dark-bg-colour)\",\r\n                  padding: \"5px\",\r\n                  borderRadius: \"20px\",\r\n                  width: \"calc(100% - 65px)\",\r\n                  border: \"solid 1px var(--light-bg-colour)\",\r\n                  color: \"white\",\r\n                  resize: \"none\",\r\n                }}\r\n                maxRows={10}\r\n                placeholder=\"Type Something...\"\r\n              />\r\n              <button\r\n                style={{\r\n                  width: \"60px\",\r\n                  marginLeft: \"5px\",\r\n                  backgroundColor: \"var(--dark-bg-colour)\",\r\n                  padding: \"5px\",\r\n                  borderRadius: \"20px\",\r\n                  border: \"solid 1px var(--light-bg-colour)\",\r\n                  color: \"white\",\r\n                  textAlign: \"center\",\r\n                }}\r\n                type=\"submit\"\r\n                onClick={(e: any) => {\r\n                  inputref.current.focus();\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faPaperPlane} />\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Chat() {\r\n  const { loggedin, user } = useData();\r\n  const { id: chattingto } = useParams<{ id: string }>();\r\n  if (!loggedin) {\r\n    return <Redirect to=\"/\"></Redirect>;\r\n  } else if (chattingto && chattingto !== user.id) {\r\n    return <ChatPage />;\r\n  }\r\n  return <ChatNotFound></ChatNotFound>;\r\n}\r\n\r\nexport default Chat;\r\n","import { faFileCode } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Error404() {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        textAlign: \"center\",\r\n        color: \"gray\",\r\n      }}\r\n    >\r\n      <div style={{ fontSize: \"50px\" }}>\r\n        <FontAwesomeIcon icon={faFileCode} />\r\n      </div>\r\n      <h1>Page Not Found!</h1>\r\n      <p>\r\n        go to the{\" \"}\r\n        <span>\r\n          <Link to=\"/\" style={{ color: \"var(--secondary-text-colour)\" }}>\r\n            Home Page\r\n          </Link>\r\n          !\r\n        </span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Error404;\r\n","import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\n\r\nfunction useLocalStorage<T>(\r\n  key: string,\r\n  initialValue: T | (() => T)\r\n): [T, Dispatch<SetStateAction<T>>] {\r\n  // Get from local storage then\r\n  // parse stored json or return initialValue\r\n  const readValue = () => {\r\n    // Prevent build error \"window is undefined\" but keep keep working\r\n    if (typeof window === \"undefined\") {\r\n      return initialValue;\r\n    }\r\n\r\n    try {\r\n      const item = window.localStorage.getItem(key);\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      console.warn(`Error reading localStorage key “${key}”:`, error);\r\n      return initialValue;\r\n    }\r\n  };\r\n\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState<T>(readValue);\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue: Dispatch<SetStateAction<T>> = (value) => {\r\n    // Prevent build error \"window is undefined\" but keeps working\r\n    if (typeof window == \"undefined\") {\r\n      console.warn(\r\n        `Tried setting localStorage key “${key}” even though environment is not a client`\r\n      );\r\n    }\r\n\r\n    try {\r\n      // Allow value to be a function so we have the same API as useState\r\n      const newValue = value instanceof Function ? value(storedValue) : value;\r\n\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(newValue));\r\n\r\n      // Save state\r\n      setStoredValue(newValue);\r\n\r\n      // We dispatch a custom event so every useLocalStorage hook are notified\r\n      window.dispatchEvent(new Event(\"local-storage\"));\r\n    } catch (error) {\r\n      console.warn(`Error setting localStorage key “${key}”:`, error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStoredValue(readValue());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleStorageChange = () => {\r\n      setStoredValue(readValue());\r\n    };\r\n\r\n    // this only works for other documents, not the current one\r\n    window.addEventListener(\"storage\", handleStorageChange);\r\n\r\n    // this is a custom event, triggered in writeValueToLocalStorage\r\n    window.addEventListener(\"local-storage\", handleStorageChange);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"storage\", handleStorageChange);\r\n      window.removeEventListener(\"local-storage\", handleStorageChange);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import { SecureLink } from \"react-secure-link\";\r\nimport Linkify from \"react-linkify\";\r\nimport { useState } from \"react\";\r\nimport ColorThief from \"colorthief\";\r\n\r\nfunction ProfilePage({\r\n  user,\r\n}: {\r\n  user: {\r\n    profilePic: string;\r\n    username: string;\r\n    tag: string;\r\n    backgroundImage: string | null;\r\n    aboutme: string;\r\n    [key: string]: any;\r\n  };\r\n}) {\r\n  const [backgroundcolour, setbackgroundcolour] = useState({\r\n    r: 86,\r\n    g: 86,\r\n    b: 255,\r\n  });\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: user.backgroundImage\r\n          ? `url(/files/${user.backgroundImage})`\r\n          : \"\",\r\n        backgroundColor: `rgb(${backgroundcolour.r}, ${backgroundcolour.g}, ${backgroundcolour.b})`,\r\n        padding: \"1rem\",\r\n        backgroundRepeat: user.backgroundImage ? \"no-repeat\" : \"\",\r\n        backgroundSize: user.backgroundImage ? \"cover\" : \"\",\r\n        borderRadius: \"10px\",\r\n        border: \"solid 1px var(--light-bg-colour)\",\r\n        margin: \"1rem\",\r\n        backgroundPosition: user.backgroundImage ? \"center\" : \"\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <img\r\n          alt=\"profile\"\r\n          src={\"/files/\" + user.profilePic}\r\n          style={{\r\n            maxHeight: \"75px\",\r\n            maxWidth: \"100%\",\r\n            height: \"auto\",\r\n            width: \"auto\",\r\n            borderRadius: \"50%\",\r\n          }}\r\n          onLoad={async (e: any) => {\r\n            const colorThief = new ColorThief();\r\n            const resp = await colorThief.getColor(e.target);\r\n            setbackgroundcolour({ r: resp[0], g: resp[1], b: resp[2] });\r\n          }}\r\n        />\r\n        <h4>\r\n          <span\r\n            style={{\r\n              color: \"white\",\r\n              WebkitTextStroke: \"1px black\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            {user.username}\r\n            <span\r\n              style={{\r\n                color: \"lightgray\",\r\n                fontWeight: \"normal\",\r\n              }}\r\n            >\r\n              #{user.tag}\r\n            </span>\r\n          </span>\r\n        </h4>\r\n      </div>\r\n      {user.aboutme ? (\r\n        <div\r\n          style={{\r\n            padding: \"1rem\",\r\n            backgroundColor: \"var(--dark-bg-colour)\",\r\n            borderRadius: \"10px\",\r\n            border: \"solid 1px var(--light-bg-colour)\",\r\n          }}\r\n        >\r\n          <b>About Me</b>\r\n          <div>\r\n            <Linkify\r\n              componentDecorator={(\r\n                decoratedHref: string,\r\n                decoratedText: string,\r\n                key: any\r\n              ) => (\r\n                <SecureLink\r\n                  href={decoratedHref}\r\n                  key={key}\r\n                  style={{ color: \"var(--secondary-text-colour)\" }}\r\n                >\r\n                  {decoratedText}\r\n                </SecureLink>\r\n              )}\r\n            >\r\n              {user.aboutme}\r\n            </Linkify>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;\r\n","import { Redirect } from \"react-router-dom\";\r\nimport { useData } from \"../hooks/datahook\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./css/usersettings.css\";\r\nimport ProfilePage from \"./profilePage\";\r\nimport { useState, useRef } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { RouterForm } from \"./RouterForm\";\r\nimport Avatar from \"react-avatar-edit\";\r\n\r\nfunction Changebutton({\r\n  name,\r\n  children,\r\n  onClick = () => {},\r\n  clickable,\r\n}: {\r\n  name: string;\r\n  children: any;\r\n  onClick?: (e: any) => void;\r\n  clickable: boolean;\r\n}) {\r\n  return (\r\n    <div\r\n      style={{\r\n        border: \"solid 1px var(--light-bg-colour)\",\r\n        borderRadius: \"10px\",\r\n        backgroundColor: \"var(--main-bg-colour)\",\r\n        padding: \"1rem\",\r\n        margin: \"1rem\",\r\n      }}\r\n    >\r\n      <p style={{ margin: \"0\", color: \"lightgray\" }}>{name}</p>\r\n      {clickable ? (\r\n        <div\r\n          onClick={onClick}\r\n          className={\"changebutton\"}\r\n          style={{ color: \"white\" }}\r\n        >\r\n          {children}\r\n        </div>\r\n      ) : (\r\n        <div>{children}</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nModal.setAppElement(\"#root\");\r\nfunction UserSettings() {\r\n  const { loggedin, user, rechecklogged } = useData();\r\n  const [error, seterror] = useState(\"\");\r\n  const backgroundinputref = useRef<any>(null);\r\n  const [uploading, setuploading] = useState(false);\r\n  const [backgroundImage, setbackgroundImage] = useState<string | undefined>(\r\n    undefined\r\n  );\r\n  const [profile, setprofile] = useState<Blob | null>(null);\r\n  const [UsernameModelIsOpen, setUsernameModelIsOpen] = useState(false);\r\n  const [ProfileModelIsOpen, setProfileModelIsOpen] = useState(false);\r\n  if (!loggedin) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"1rem\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          margin: \"auto\",\r\n          border: \"solid 1px var(--light-bg-colour)\",\r\n          borderRadius: \"10px\",\r\n          backgroundColor: \"var(--dark-bg-colour)\",\r\n          padding: \"1rem\",\r\n          maxWidth: \"700px\",\r\n        }}\r\n      >\r\n        <h1 style={{ textAlign: \"center\" }}>User Settings</h1>\r\n        <ProfilePage user={user} />\r\n        <div style={{ textAlign: \"center\" }}>EDIT</div>\r\n        <button\r\n          style={{\r\n            color: \"white\",\r\n            backgroundColor: \"var(--dark-bg-colour)\",\r\n            border: \"solid 2px var(--light-bg-colour)\",\r\n            borderRadius: \"5px\",\r\n            margin: \"0 1rem\",\r\n          }}\r\n          onClick={() => {\r\n            rechecklogged();\r\n          }}\r\n        >\r\n          update\r\n        </button>\r\n        <Changebutton\r\n          name=\"Profile Picture\"\r\n          onClick={() => {\r\n            setProfileModelIsOpen(true);\r\n          }}\r\n          clickable={true}\r\n        >\r\n          <img\r\n            alt=\"profile\"\r\n            src={\"/files/\" + user.profilePic}\r\n            style={{\r\n              height: \"75px\",\r\n              margin: \"0 1rem 0 0\",\r\n              borderRadius: \"50%\",\r\n            }}\r\n          />\r\n          <FontAwesomeIcon icon={faPen} />\r\n        </Changebutton>\r\n        <Modal\r\n          isOpen={ProfileModelIsOpen}\r\n          onRequestClose={() => {\r\n            setProfileModelIsOpen(false);\r\n          }}\r\n          onAfterOpen={() => {\r\n            seterror(\"\");\r\n          }}\r\n          style={{\r\n            overlay: { backgroundColor: \"rgb(18 18 18 / 50%)\" },\r\n            content: {\r\n              backgroundColor: \"var(--main-bg-colour)\",\r\n              border: \"1px solid var(--dark-bg-colour)\",\r\n              top: \"50%\",\r\n              left: \"50%\",\r\n              right: \"auto\",\r\n              bottom: \"auto\",\r\n              marginRight: \"-50%\",\r\n              transform: \"translate(-50%, -50%)\",\r\n            },\r\n          }}\r\n          contentLabel=\"Username Change\"\r\n        >\r\n          <form\r\n            onSubmit={async (e: any) => {\r\n              e.preventDefault();\r\n              setuploading(true);\r\n              if (profile) {\r\n                const fd = new FormData();\r\n                fd.append(\"profilepic\", profile);\r\n                const resp = await (\r\n                  await fetch(\"/api/setprofilepic\", {\r\n                    method: \"POST\",\r\n                    body: fd,\r\n                  })\r\n                ).json();\r\n                if (resp.resp) {\r\n                  setProfileModelIsOpen(false);\r\n                } else {\r\n                  seterror(resp.err);\r\n                }\r\n              } else {\r\n                seterror(\"input a profile picture!\");\r\n              }\r\n              setuploading(false);\r\n            }}\r\n          >\r\n            PROFILE PICTURE\r\n            <Avatar\r\n              width={300}\r\n              height={0}\r\n              imageWidth={300}\r\n              onCrop={(dataURL) => {\r\n                fetch(dataURL).then((fetched) =>\r\n                  fetched.blob().then((blob) => setprofile(blob))\r\n                );\r\n              }}\r\n              src={\"/files/\" + user.profilePic}\r\n              labelStyle={{ color: \"white\" }}\r\n              onClose={() => {\r\n                setprofile(null);\r\n              }}\r\n              exportMimeType=\"image/jpeg\"\r\n              exportSize={500}\r\n              exportQuality={0.75}\r\n              exportAsSquare\r\n            />\r\n            <p style={{ color: \"red\" }}>{error}</p>\r\n            {!uploading ? (\r\n              <button\r\n                style={{\r\n                  float: \"right\",\r\n                  marginTop: \"1rem\",\r\n                  color: \"white\",\r\n                  backgroundColor: \"var(--dark-bg-colour)\",\r\n                  border: \"solid 2px var(--light-bg-colour)\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n                type=\"submit\"\r\n              >\r\n                Save\r\n              </button>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </form>\r\n        </Modal>\r\n        <Changebutton name=\"Background Image\" clickable={false}>\r\n          <RouterForm\r\n            action=\"/api/setbackgroundimage\"\r\n            beforecallback={(e: any) => {\r\n              setuploading(true);\r\n              return true;\r\n            }}\r\n            callback={() => {\r\n              if (backgroundinputref.current) {\r\n                backgroundinputref.current.value = \"\";\r\n                setbackgroundImage(undefined);\r\n              }\r\n              setuploading(false);\r\n            }}\r\n          >\r\n            {backgroundImage ? (\r\n              <img\r\n                src={backgroundImage}\r\n                alt=\"background\"\r\n                style={{\r\n                  maxHeight: \"100px\",\r\n                  maxWidth: \"100px\",\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <input\r\n              type=\"file\"\r\n              name=\"backgroundImage\"\r\n              style={{ maxWidth: \"100%\" }}\r\n              onChange={(e: any) => {\r\n                setbackgroundImage(\r\n                  e.target.files[0]\r\n                    ? URL.createObjectURL(e.target.files[0])\r\n                    : undefined\r\n                );\r\n              }}\r\n              accept=\"image/*\"\r\n              ref={backgroundinputref}\r\n            />{\" \"}\r\n            {!uploading ? (\r\n              <button\r\n                style={{\r\n                  color: \"white\",\r\n                  backgroundColor: \"var(--dark-bg-colour)\",\r\n                  border: \"solid 2px var(--light-bg-colour)\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n                type=\"submit\"\r\n              >\r\n                Save\r\n              </button>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </RouterForm>\r\n        </Changebutton>\r\n        <Changebutton\r\n          name=\"Username\"\r\n          onClick={() => {\r\n            setUsernameModelIsOpen(true);\r\n          }}\r\n          clickable={true}\r\n        >\r\n          <span style={{ color: \"white\" }}>\r\n            {user.username}\r\n            <span style={{ color: \"lightgray\" }}>#{user.tag}</span>\r\n            <FontAwesomeIcon icon={faPen} />\r\n          </span>\r\n        </Changebutton>\r\n        <Modal\r\n          isOpen={UsernameModelIsOpen}\r\n          onRequestClose={() => {\r\n            setUsernameModelIsOpen(false);\r\n          }}\r\n          onAfterOpen={() => {\r\n            seterror(\"\");\r\n          }}\r\n          style={{\r\n            overlay: { backgroundColor: \"rgb(18 18 18 / 50%)\" },\r\n            content: {\r\n              backgroundColor: \"var(--main-bg-colour)\",\r\n              border: \"1px solid var(--dark-bg-colour)\",\r\n              top: \"50%\",\r\n              left: \"50%\",\r\n              right: \"auto\",\r\n              bottom: \"auto\",\r\n              marginRight: \"-50%\",\r\n              transform: \"translate(-50%, -50%)\",\r\n            },\r\n          }}\r\n          contentLabel=\"Username Change\"\r\n        >\r\n          <form\r\n            onSubmit={async (e: any) => {\r\n              e.preventDefault();\r\n              setuploading(true);\r\n              if (\r\n                e.target[0].value.trim() !== \"\" &&\r\n                e.target[1].value.trim() !== \"\"\r\n              ) {\r\n                const fd = new FormData();\r\n                fd.append(\"username\", e.target[0].value);\r\n                fd.append(\"pass\", e.target[1].value);\r\n                const resp = await (\r\n                  await fetch(\"/api/setusername\", { method: \"POST\", body: fd })\r\n                ).json();\r\n                if (resp.resp) {\r\n                  setUsernameModelIsOpen(false);\r\n                } else {\r\n                  seterror(resp.err);\r\n                }\r\n              } else {\r\n                seterror(\"input a username and password!\");\r\n              }\r\n              setuploading(false);\r\n            }}\r\n          >\r\n            Username\r\n            <div\r\n              style={{\r\n                border: \"solid 1px gray\",\r\n                backgroundColor: \"var(--dark-mode)\",\r\n                borderRadius: \"5px\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <input\r\n                onInput={(e: any) => {\r\n                  e.target.value = e.target.value.trimStart();\r\n                  if (e.target.value.length > 30) {\r\n                    e.target.value = e.target.value.substring(0, 30);\r\n                  }\r\n                }}\r\n                style={{\r\n                  color: \"white\",\r\n                  backgroundColor: \"transparent\",\r\n                  border: \"none\",\r\n                  borderRight: \"solid 1px white\",\r\n                  borderRadius: \"0px\",\r\n                }}\r\n                placeholder=\"Username\"\r\n                autoComplete=\"new-password\"\r\n                type=\"text\"\r\n                defaultValue={user.username}\r\n              ></input>\r\n              <span\r\n                style={{\r\n                  color: \"lightgray\",\r\n                  padding: \"0 1rem\",\r\n                  float: \"right\",\r\n                }}\r\n              >\r\n                #{user.tag}\r\n              </span>\r\n            </div>\r\n            <input\r\n              style={{\r\n                width: \"100%\",\r\n                color: \"white\",\r\n                backgroundColor: \"var(--dark-mode)\",\r\n                border: \"solid 1px gray\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n              placeholder=\"Current Password\"\r\n              autoComplete=\"new-password\"\r\n              type=\"password\"\r\n            />\r\n            <p style={{ color: \"red\" }}>{error}</p>\r\n            {!uploading ? (\r\n              <button\r\n                style={{\r\n                  float: \"right\",\r\n                  marginTop: \"1rem\",\r\n                  color: \"white\",\r\n                  backgroundColor: \"var(--dark-bg-colour)\",\r\n                  border: \"solid 2px var(--light-bg-colour)\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n                type=\"submit\"\r\n              >\r\n                Save\r\n              </button>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </form>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserSettings;\r\n","const snooze = (milliseconds: number) =>\r\n  new Promise((resolve) => setTimeout(resolve, milliseconds));\r\nexport default snooze;\r\n","import { useState } from \"react\";\r\nimport { useData } from \"../hooks/datahook\";\r\nimport ColorThief from \"colorthief\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport useApi from \"../hooks/useapi\";\r\nimport Loader from \"./loader\";\r\nimport LoadError from \"./error\";\r\nimport { useRef } from \"react\";\r\nimport \"./css/contacts.css\";\r\nimport Modal from \"react-modal\";\r\nimport ProfilePage from \"./profilePage\";\r\nimport playSound from \"../playsound\";\r\nconst colorThief = new ColorThief();\r\n\r\nfunction Contact({\r\n  user,\r\n}: {\r\n  user: {\r\n    profilePic: string;\r\n    username: string;\r\n    id: string;\r\n    tag: string;\r\n    backgroundImage: string | null;\r\n    aboutme: string;\r\n    [key: string]: any;\r\n  };\r\n}) {\r\n  const [backgroundcolour, setbackgroundcolour] = useState({\r\n    r: 86,\r\n    g: 86,\r\n    b: 255,\r\n  });\r\n  const history = useHistory();\r\n  const holdref = useRef<any>();\r\n  const [UserModelIsOpen, setUserModelIsOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <div\r\n        onPointerDown={() => {\r\n          holdref.current = setTimeout(() => {\r\n            holdref.current = undefined;\r\n            setUserModelIsOpen(true);\r\n          }, 500);\r\n          playSound(\"/sounds/click2.mp3\");\r\n        }}\r\n        onPointerUp={() => {\r\n          if (holdref.current) {\r\n            clearInterval(holdref.current);\r\n            history.push(`/chat/${user.id}`);\r\n          }\r\n          playSound(\"/sounds/click1.mp3\");\r\n        }}\r\n        style={{\r\n          backgroundImage: user.backgroundImage\r\n            ? `url(/files/${user.backgroundImage})`\r\n            : \"\",\r\n          backgroundColor: `rgb(${backgroundcolour.r}, ${backgroundcolour.g}, ${backgroundcolour.b})`,\r\n          padding: \"1rem\",\r\n          marginBottom: \"1rem\",\r\n          backgroundRepeat: user.backgroundImage ? \"no-repeat\" : \"\",\r\n          backgroundSize: user.backgroundImage ? \"cover\" : \"\",\r\n          borderRadius: \"10px\",\r\n          backgroundPosition: user.backgroundImage ? \"center\" : \"\",\r\n          textOverflow: \"ellipsis\",\r\n          overflow: \"hidden\",\r\n          whiteSpace: \"nowrap\",\r\n          cursor: \"pointer\",\r\n\r\n          minHeight: \"82px\",\r\n        }}\r\n        className={\"contactbutton noselect\"}\r\n      >\r\n        <img\r\n          alt=\"profile\"\r\n          loading=\"lazy\"\r\n          src={\"/files/\" + user.profilePic}\r\n          style={{\r\n            maxHeight: \"50px\",\r\n            maxWidth: \"100%\",\r\n            height: \"auto\",\r\n            width: \"auto\",\r\n            borderRadius: \"50%\",\r\n          }}\r\n          onLoad={async (e: any) => {\r\n            const resp = await colorThief.getColor(e.target);\r\n            setbackgroundcolour({ r: resp[0], g: resp[1], b: resp[2] });\r\n          }}\r\n        />\r\n        <span>\r\n          <span\r\n            style={{\r\n              color: \"white\",\r\n              WebkitTextStroke: \"1px black\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"20px\",\r\n              marginLeft: \"5px\",\r\n            }}\r\n          >\r\n            {user.username}\r\n          </span>\r\n        </span>\r\n        <div\r\n          style={{\r\n            float: \"right\",\r\n            marginLeft: \"3px\",\r\n            background: \"var(--main-bg-colour)\",\r\n            padding: \"5px\",\r\n            borderRadius: \"10px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Hold for Profile\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        isOpen={UserModelIsOpen}\r\n        onRequestClose={() => {\r\n          setUserModelIsOpen(false);\r\n        }}\r\n        style={{\r\n          overlay: { backgroundColor: \"rgb(18 18 18 / 50%)\", zIndex: 10 },\r\n          content: {\r\n            backgroundColor: \"transparent\",\r\n            zIndex: 11,\r\n            border: \"none\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            right: \"auto\",\r\n            bottom: \"auto\",\r\n            marginRight: \"-50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n          },\r\n        }}\r\n        contentLabel=\"Username Change\"\r\n      >\r\n        <ProfilePage user={user}></ProfilePage>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Contacts() {\r\n  const { loggedin } = useData();\r\n  const { data, loading, error } = useApi(\"/api/getallcontacts\");\r\n  if (!loggedin) {\r\n    return <Redirect to=\"/\"></Redirect>;\r\n  }\r\n  return loading || error ? (\r\n    error ? (\r\n      <LoadError error={String(error)}></LoadError>\r\n    ) : (\r\n      <Loader></Loader>\r\n    )\r\n  ) : (\r\n    <div\r\n      style={{\r\n        margin: \"1rem 0\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          margin: \"auto\",\r\n          borderRadius: \"10px\",\r\n          padding: \"1rem\",\r\n          maxWidth: \"700px\",\r\n        }}\r\n      >\r\n        <h1 style={{ textAlign: \"center\" }}>Contacts</h1>\r\n        <div>\r\n          {data.resp ? (\r\n            data.contacts.length > 0 ? (\r\n              data.contacts.map((contact: any) => (\r\n                <Contact key={contact.id} user={contact}></Contact>\r\n              ))\r\n            ) : (\r\n              <p style={{ textAlign: \"center\" }}>\r\n                You have no contacts,{\" \"}\r\n                <span>\r\n                  <Link\r\n                    style={{ color: \"var(--secondary-text-colour)\" }}\r\n                    to=\"/add\"\r\n                  >\r\n                    add people\r\n                  </Link>\r\n                </span>{\" \"}\r\n                or wait for them to add you back!\r\n              </p>\r\n            )\r\n          ) : (\r\n            <p style={{ color: \"red\", textAlign: \"center\" }}>{data.err}</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contacts;\r\n","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport useApi from \"../hooks/useapi\";\r\nimport ColorThief from \"colorthief\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Loader from \"./loader\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst colorThief = new ColorThief();\r\n\r\nfunction UserListing({\r\n  user,\r\n  setloading,\r\n}: {\r\n  user: {\r\n    profilePic: string;\r\n    username: string;\r\n    id: string;\r\n    tag: string;\r\n    backgroundImage: string | null;\r\n    [key: string]: any;\r\n  };\r\n  setloading: Function;\r\n}) {\r\n  const [backgroundcolour, setbackgroundcolour] = useState({\r\n    r: 86,\r\n    g: 86,\r\n    b: 255,\r\n  });\r\n  const history = useHistory();\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: user.backgroundImage\r\n          ? `url(/files/${user.backgroundImage})`\r\n          : \"\",\r\n        backgroundColor: `rgb(${backgroundcolour.r}, ${backgroundcolour.g}, ${backgroundcolour.b})`,\r\n        padding: \"1rem\",\r\n        backgroundRepeat: user.backgroundImage ? \"no-repeat\" : \"\",\r\n        backgroundSize: user.backgroundImage ? \"cover\" : \"\",\r\n        borderRadius: \"10px\",\r\n        border: \"solid 1px var(--light-bg-colour)\",\r\n        margin: \"1rem\",\r\n        backgroundPosition: user.backgroundImage ? \"center\" : \"\",\r\n        textOverflow: \"ellipsis\",\r\n        overflow: \"hidden\",\r\n        whiteSpace: \"nowrap\",\r\n      }}\r\n    >\r\n      <img\r\n        alt=\"profile\"\r\n        loading=\"lazy\"\r\n        src={\"/files/\" + user.profilePic}\r\n        style={{\r\n          maxHeight: \"75px\",\r\n          maxWidth: \"100%\",\r\n          height: \"auto\",\r\n          width: \"auto\",\r\n          borderRadius: \"50%\",\r\n        }}\r\n        onLoad={async (e: any) => {\r\n          const resp = await colorThief.getColor(e.target);\r\n          setbackgroundcolour({ r: resp[0], g: resp[1], b: resp[2] });\r\n        }}\r\n      />\r\n      <span>\r\n        <span\r\n          style={{\r\n            color: \"white\",\r\n            WebkitTextStroke: \"1px black\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"20px\",\r\n            marginLeft: \"5px\",\r\n          }}\r\n        >\r\n          {user.username}\r\n          <span\r\n            style={{\r\n              color: \"lightgray\",\r\n              fontWeight: \"normal\",\r\n            }}\r\n          >\r\n            #{user.tag}\r\n          </span>\r\n        </span>\r\n      </span>\r\n      <div\r\n        style={{\r\n          float: \"right\",\r\n          background: \"var(--main-bg-colour)\",\r\n          padding: \"5px\",\r\n          borderRadius: \"10px\",\r\n          cursor: \"pointer\",\r\n        }}\r\n        onClick={async () => {\r\n          setloading(true);\r\n          const formdata = new FormData();\r\n          formdata.append(\"user\", user.id);\r\n          const resp = await (\r\n            await fetch(\"/api/frienduserfromid\", {\r\n              method: \"POST\",\r\n              body: formdata,\r\n            })\r\n          ).json();\r\n          if (resp.friends) {\r\n            history.push(`/chat/${user.id}`);\r\n          } else {\r\n            history.push(`/contacts`);\r\n          }\r\n          setloading(false);\r\n        }}\r\n      >\r\n        <FontAwesomeIcon icon={faUserPlus}></FontAwesomeIcon>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction AddPeople() {\r\n  const [search, setsearch] = useState(\"\");\r\n  const { data, setData } = useApi(\r\n    search\r\n      ? \"/api/searchusers?\" + new URLSearchParams({ q: search }).toString()\r\n      : null\r\n  );\r\n  const [loading, setloading] = useState(false);\r\n  useEffect(() => {\r\n    if (!search) setData(undefined);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [search]);\r\n  return loading ? (\r\n    <Loader></Loader>\r\n  ) : (\r\n    <div\r\n      style={{\r\n        margin: \"1rem\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          margin: \"auto\",\r\n          border: \"solid 1px var(--light-bg-colour)\",\r\n          borderRadius: \"10px\",\r\n          backgroundColor: \"var(--dark-bg-colour)\",\r\n          padding: \"1rem\",\r\n          maxWidth: \"700px\",\r\n        }}\r\n      >\r\n        <h1 style={{ textAlign: \"center\" }}>Add</h1>\r\n\r\n        <input\r\n          type=\"text\"\r\n          style={{\r\n            width: \"100%\",\r\n            backgroundColor: \"var(--dark-bg-colour)\",\r\n            padding: \"5px\",\r\n            borderRadius: \"20px\",\r\n            border: \"solid 1px var(--light-bg-colour)\",\r\n            color: \"white\",\r\n          }}\r\n          placeholder={\"search users\"}\r\n          onKeyUp={(e: any) => {\r\n            setsearch(e.target.value.trim());\r\n          }}\r\n        ></input>\r\n        <div>\r\n          {data && search ? (\r\n            data.resp ? (\r\n              data.data.length > 0 ? (\r\n                <div>\r\n                  <p style={{ textAlign: \"end\" }}>\r\n                    {data.data.length} result{data.data.length === 1 ? \"\" : \"s\"}{\" \"}\r\n                    found!\r\n                  </p>\r\n                  {data.data.map(\r\n                    (\r\n                      value: {\r\n                        profilePic: string;\r\n                        username: string;\r\n                        id: string;\r\n                        tag: string;\r\n                        backgroundImage: string | null;\r\n                        [key: string]: any;\r\n                      },\r\n                      index: number\r\n                    ) => (\r\n                      <UserListing\r\n                        user={value}\r\n                        setloading={setloading}\r\n                        key={value.id}\r\n                      />\r\n                    )\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <p>No Results Found!</p>\r\n              )\r\n            ) : (\r\n              <p style={{ color: \"red\", textAlign: \"center\" }}>{data.err}</p>\r\n            )\r\n          ) : (\r\n            <p style={{ textAlign: \"center\" }}>\r\n              type someones username and tag\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddPeople;\r\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useWebSocket from \"react-use-websocket\";\r\nimport { useData } from \"./hooks/datahook\";\r\nimport playSound from \"./playsound\";\r\n\r\nfunction NotificationComponent() {\r\n  const { loggedin, notifications } = useData();\r\n  const history = useHistory();\r\n  const { lastJsonMessage, sendJsonMessage } = useWebSocket(\r\n    `ws://${\r\n      !process.env.NODE_ENV || process.env.NODE_ENV === \"development\"\r\n        ? window.location.hostname + \":5050\"\r\n        : window.location.host\r\n    }/notifications`,\r\n    {\r\n      shouldReconnect: () => true,\r\n    },\r\n    loggedin\r\n  );\r\n  useEffect(() => {\r\n    if (lastJsonMessage) {\r\n      if (lastJsonMessage.type === \"ping\") {\r\n        sendJsonMessage({ type: \"pong\" });\r\n      } else {\r\n        if (lastJsonMessage.sound !== false) {\r\n          playSound(\r\n            lastJsonMessage.sound\r\n              ? lastJsonMessage.sound\r\n              : \"/sounds/notification.mp3\"\r\n          );\r\n        }\r\n        notifications.addNotification({\r\n          title: lastJsonMessage.title,\r\n          message: lastJsonMessage.message,\r\n          type: \"default\",\r\n          onRemoval: (_: string, type: any) => {\r\n            if (type === \"click\") {\r\n              history.push(lastJsonMessage.to);\r\n            }\r\n          },\r\n          insert: \"top\",\r\n          container: \"top-right\",\r\n          animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n          animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n          dismiss: {\r\n            pauseOnHover: true,\r\n            duration: 5000,\r\n            onScreen: true,\r\n          },\r\n        });\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [lastJsonMessage]);\r\n  return <></>;\r\n}\r\nexport default NotificationComponent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./pages/css/toggleswitch.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport \"./pages/css/scrollbar.css\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/Login\";\r\nimport { data as datahook } from \"./hooks/datahook\";\r\nimport PageNav from \"./pages/Navbar\";\r\nimport \"./colourPallete.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport useApi from \"./hooks/useapi\";\r\nimport Loader from \"./pages/loader\";\r\nimport Signup from \"./pages/Signup\";\r\nimport Chat from \"./pages/Chat\";\r\nimport \"./pages/css/highlight.css\";\r\nimport Error404 from \"./pages/404\";\r\nimport useLocalStorage from \"./hooks/useLocalStorage\";\r\nimport UserSettings from \"./pages/usersettings\";\r\nimport snooze from \"./snooze\";\r\nimport Contacts from \"./pages/contacts\";\r\nimport ReactNotification, { store } from \"react-notifications-component\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\nimport AddPeople from \"./pages/addpeople\";\r\nimport NotificationComponent from \"./notification\";\r\nimport LoadError from \"./pages/error\";\r\n\r\nfunction App() {\r\n  const { data, error, loading, reload } = useApi(\"/api/userdata\");\r\n  const [navbarsize, setnavbarsize] = useState({ width: 0, height: 0 });\r\n  const [chattingto, setchattingto] = useLocalStorage(\"chattingto\", null);\r\n  const [getuserdataonupdate, setgetuserdataonupdate] = useState(false);\r\n  const [userdata, setuserdata] = useState(data);\r\n  const [catchedcontacts, setcachedcontacts] = useState<any>(null);\r\n  useEffect(() => {\r\n    setuserdata(data);\r\n  }, [data]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        if (!getuserdataonupdate) {\r\n          setgetuserdataonupdate(true);\r\n          const response = await (\r\n            await fetch(\"/api/getuserdataonupdate\")\r\n          ).json();\r\n          if (!response.reconnect) {\r\n            setuserdata(response);\r\n          }\r\n          setgetuserdataonupdate(false);\r\n        }\r\n      } catch {\r\n        await snooze(1000);\r\n        setgetuserdataonupdate(false);\r\n      }\r\n    })();\r\n  });\r\n  return (\r\n    <Router>\r\n      <div style={{ overflowWrap: \"anywhere\" }}>\r\n        {error || loading ? (\r\n          error ? (\r\n            <LoadError error={String(error)}></LoadError>\r\n          ) : (\r\n            <Loader></Loader>\r\n          )\r\n        ) : (\r\n          <datahook.Provider\r\n            value={{\r\n              loggedin: userdata.loggedin,\r\n              user: userdata.user,\r\n              rechecklogged: reload,\r\n              setnavbarsize,\r\n              navbarsize,\r\n              chattingto,\r\n              setchattingto,\r\n              notifications: store,\r\n              catchedcontacts,\r\n              setcachedcontacts,\r\n            }}\r\n          >\r\n            <PageNav />\r\n            <ReactNotification />\r\n            <NotificationComponent />\r\n            <div>\r\n              <Switch>\r\n                <Route path=\"/\" exact>\r\n                  <Home />\r\n                </Route>\r\n                <Route path=\"/chat\" exact>\r\n                  <Redirect to={`/chat/${chattingto}`} />\r\n                </Route>\r\n                <Route path=\"/chat/:id\" exact>\r\n                  <Chat />\r\n                </Route>\r\n                <Route path=\"/contacts\" exact>\r\n                  <Contacts />\r\n                </Route>\r\n                <Route path=\"/login\" exact>\r\n                  <Login />\r\n                </Route>\r\n                <Route path=\"/signup\" exact>\r\n                  <Signup />\r\n                </Route>\r\n                <Route path=\"/user/settings\" exact>\r\n                  <UserSettings />\r\n                </Route>\r\n                <Route path=\"/add\" exact>\r\n                  <AddPeople></AddPeople>\r\n                </Route>\r\n                <Route>\r\n                  <Error404></Error404>\r\n                </Route>\r\n              </Switch>\r\n            </div>\r\n          </datahook.Provider>\r\n        )}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\nexport default App;\r\n"],"sourceRoot":""}